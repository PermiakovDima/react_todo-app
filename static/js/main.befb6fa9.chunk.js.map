{"version":3,"sources":["api/users/usersAPI.ts","components/Notification/Notification.tsx","components/Registration/Registration.tsx","components/Auth/Auth.tsx","api/todos/todosAPI.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["BASE_URL","postUser","name","username","email","fetch","method","headers","body","JSON","stringify","Notification","message","className","Registration","backToAuth","handlerLogin","filterEmailUsers","useState","newEmail","setNewEmail","newPassword","setPassword","setName","opennerMessage","setOpennerMessage","errorMessage","setErrorMessage","useMemo","htmlFor","type","id","value","placeholder","onChange","event","target","onClick","checkNewEmail","some","validatedName","length","validatedEmailLength","validatedEmailType","includes","a","createUser","Auth","waitingNewUser","foundUser","setEmail","password","opennerRegistr","setOpennerRegistr","useEffect","min","postTodo","title","userId","completed","response","json","patchTodos","todoId","deleteTodo","TodoItem","handlerChecked","handlerDeleteTodo","handlerEditTodo","editor","setEditor","etidorTitle","setEtidorTitle","classnames","editing","onDoubleClick","checked","onKeyDown","key","TodoList","visibleTodos","handlerAllChecked","checkeAll","every","todo","map","TodoApp","todos","user","removeUser","handlerSingOut","setVisibleTodos","newTitle","setNewTitle","updateTodos","setUpdateTodos","handleSubmit","preventDefault","then","res","parthName","useLocation","pathname","filterTodos","filter","setActive","isActive","src","alt","onSubmit","findTodo","find","pre","findIndex","splice","areCompleted","forEach","editTodo","to","end","onlyActive","App","setTodos","users","setUsers","setfoundUser","checkNewUser","setCheckNewUser","checkUser","localStorage","getItem","dateFromServer","todosFromServer","usersFromServer","Error","setItem","foundTodos","findUser","firstFilter","removeItem","updateUsers","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.befb6fa9.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api/users';\n\nexport const getUsers = () => {\n  return fetch(`${BASE_URL}`)\n    .then(res => res.json());\n};\n\nexport const deleteUser = (userId: number) => {\n  return fetch(`${BASE_URL}/${userId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const postUser = (\n  name: string,\n  username: string,\n  email: string,\n) => {\n  return fetch(`${BASE_URL}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      name,\n      username,\n      email,\n    }),\n  });\n};\n","import React from 'react';\nimport './Notification.scss';\n\ntype Props = {\n  message: string,\n};\n\nexport const Notification: React.FC<Props> = ({ message }) => {\n  return (\n    <div className=\"Notification\">\n      {message}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { postUser } from '../../api/users/usersAPI';\nimport { Notification } from '../Notification';\n\nimport '../Auth/Auth.scss';\n\ntype Props = {\n  backToAuth: () => void,\n  handlerLogin: (email: string, password: string) => void,\n  filterEmailUsers: string[],\n};\n\nexport const Registration: React.FC<Props> = ({ backToAuth, handlerLogin, filterEmailUsers }) => {\n  const [newEmail, setNewEmail] = useState('');\n  const [newPassword, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [opennerMessage, setOpennerMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useMemo(() => {\n    setOpennerMessage(false);\n  }, [newEmail, newPassword, name]);\n\n  const createUser = () => {\n    const checkNewEmail = filterEmailUsers.some(email => email === newEmail);\n\n    const validatedName = name.length > 2;\n    const validatedEmailLength = newEmail.length > 5;\n    const validatedEmailType = newEmail.includes('@gmail.com')\n      || newEmail.includes('@mail.com') || newEmail.includes('@gmail.ru') || newEmail.includes('@mail.ru');\n\n    const validated = validatedName\n      && validatedEmailLength && newPassword.length > 7 && !checkNewEmail && validatedEmailType;\n\n    if (validated) {\n      (async () => {\n        await postUser(name, newPassword, newEmail);\n        handlerLogin(newEmail, newPassword);\n        backToAuth();\n      })();\n    } else {\n      setOpennerMessage(true);\n    }\n\n    if (name.length < 3) {\n      setErrorMessage('Enter name min 3 letters');\n    } else if (newEmail.length < 5) {\n      setErrorMessage('Enter Email min 6 letters');\n    } else if (newPassword.length < 8) {\n      setErrorMessage('Enter Password min 8 letters');\n    } else if (checkNewEmail) {\n      setErrorMessage('This email is used');\n    } else if (!validatedEmailType) {\n      setErrorMessage('Example mail xxxx@gmail.com');\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"Auth__form\">\n        <label\n          htmlFor=\"log-name\"\n          className=\"Auth__label\"\n        >\n          <span>Name</span>\n          <input\n            type=\"text\"\n            id=\"log-name\"\n            value={name}\n            className=\"Auth__input\"\n            placeholder=\"Minimum 3 letters\"\n            onChange={(event) => setName(event.target.value)}\n          />\n        </label>\n        <label\n          htmlFor=\"log-email\"\n          className=\"Auth__label\"\n        >\n          <span>Email</span>\n          <input\n            type=\"email\"\n            id=\"log-email\"\n            value={newEmail}\n            className=\"Auth__input\"\n            placeholder=\"Minimum 6 letters\"\n            onChange={(event) => setNewEmail(event.target.value)}\n          />\n        </label>\n        <label\n          htmlFor=\"log-password\"\n          className=\"Auth__label\"\n        >\n          <span>Password</span>\n          <input\n            type=\"password\"\n            id=\"log-password\"\n            value={newPassword}\n            className=\"Auth__input\"\n            placeholder=\"Minimum 8 letters\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n        <button\n          type=\"button\"\n          className=\"Auth__btn\"\n          onClick={() => createUser()}\n        >\n          CREATE\n        </button>\n        <button\n          type=\"button\"\n          className=\"Auth__btn\"\n          onClick={() => backToAuth()}\n        >\n          SING IN\n        </button>\n        {opennerMessage && <Notification message={errorMessage} />}\n      </form>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Registration } from '../Registration';\nimport { Notification } from '../Notification';\nimport './Auth.scss';\n\ntype Props = {\n  handlerLogin: (email: string, password: string) => void,\n  waitingNewUser: () => void,\n  foundUser: User | undefined,\n  filterEmailUsers: string[],\n};\n\nexport const Auth: React.FC<Props> = ({\n  handlerLogin,\n  waitingNewUser,\n  foundUser,\n  filterEmailUsers,\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [opennerRegistr, setOpennerRegistr] = useState(false);\n  const [opennerMessage, setOpennerMessage] = useState(false);\n\n  useMemo(() => {\n    setOpennerMessage(false);\n  }, [email, password]);\n\n  const backToAuth = () => {\n    setOpennerRegistr(!opennerRegistr);\n    setPassword('');\n    setEmail('');\n    setOpennerMessage(false);\n    waitingNewUser();\n  };\n\n  const controlLogin = () => {\n    if (email.length > 3 && password.length > 4) {\n      handlerLogin(email, password);\n      setOpennerMessage(true);\n    } else {\n      setOpennerMessage(true);\n    }\n  };\n\n  useEffect(() => {\n    setPassword('');\n    setEmail('');\n  }, [foundUser]);\n\n  return (\n    <div className=\"Auth\">\n      {opennerRegistr\n        ? (\n          <Registration\n            backToAuth={backToAuth}\n            handlerLogin={handlerLogin}\n            filterEmailUsers={filterEmailUsers}\n          />\n        )\n        : (\n          <form className=\"Auth__form\">\n            <label\n              htmlFor=\"log-email\"\n              className=\"Auth__label\"\n            >\n              <span>Email</span>\n              <input\n                type=\"text\"\n                id=\"log-email\"\n                value={email}\n                className=\"Auth__input\"\n                min={3}\n                placeholder=\"Minimum 3 letters\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </label>\n            <label\n              htmlFor=\"log-password\"\n              className=\"Auth__label\"\n            >\n              <span>Password</span>\n              <input\n                type=\"password\"\n                id=\"log-password\"\n                className=\"Auth__input\"\n                value={password}\n                placeholder=\"Minimum 8 letters\"\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"Auth__btn\"\n              onClick={() => controlLogin()}\n            >\n              LOGIN\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"Auth__btn\"\n              onClick={() => setOpennerRegistr(!opennerRegistr)}\n            >\n              REGISTRATION\n            </button>\n            {opennerMessage\n              && !foundUser\n              && (\n                <Notification message=\"Incorrect login or password\" />\n              ) }\n          </form>\n        )}\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/todos';\n\nexport const getTodos = () => {\n  return fetch(`${BASE_URL}`)\n    .then(res => res.json());\n};\n\nexport const getTodo = (userId: number) => {\n  return fetch(`${BASE_URL}?userId=${userId}`)\n    .then(res => res.json());\n};\n\nexport const postTodo = async (title: string, userId: number, completed: boolean) => {\n  const response = await fetch(`${BASE_URL}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      title,\n      userId,\n      completed,\n    }),\n  });\n\n  return response.json();\n};\n\nexport const patchTodos = (todoId: number, completed: boolean, title: string) => {\n  return fetch(`${BASE_URL}/${todoId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({ completed, title }),\n  });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return fetch(`${BASE_URL}/${todoId}`, {\n    method: 'DELETE',\n  });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  title: string,\n  completed: boolean,\n  todoId: number,\n  handlerChecked: (todoId: number) => void,\n  handlerDeleteTodo: (todoId: number) => void,\n  handlerEditTodo: (title: string, todoId: number) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  title,\n  completed,\n  todoId,\n  handlerChecked,\n  handlerDeleteTodo,\n  handlerEditTodo,\n}) => {\n  const [editor, setEditor] = useState(false);\n  const [etidorTitle, setEtidorTitle] = useState('');\n\n  useEffect(() => {\n    setEtidorTitle(title);\n  }, []);\n\n  const controlKeyDown = (event: { key: string; }) => {\n    if (event.key === 'Enter') {\n      handlerEditTodo(etidorTitle, todoId);\n      setEditor(false);\n    } else if (event.key === 'Escape') {\n      setEditor(false);\n    }\n  };\n\n  return (\n    <li\n      className={classnames({\n        completed,\n        editing: editor,\n      })}\n      onDoubleClick={() => setEditor(!editor)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => handlerChecked(todoId)}\n        />\n        <label>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handlerDeleteTodo(todoId)}\n        >\n          {' '}\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={etidorTitle}\n        onChange={(event) => setEtidorTitle(event.target.value)}\n        onKeyDown={controlKeyDown}\n      />\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  visibleTodos: Todo[],\n  handlerChecked: (todoId: number) => void,\n  handlerDeleteTodo: (todoId: number) => void,\n  handlerAllChecked: () => void,\n  handlerEditTodo: (title: string, todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  handlerChecked,\n  handlerDeleteTodo,\n  handlerAllChecked,\n  handlerEditTodo,\n}) => {\n  const checkeAll = visibleTodos.every(todo => todo.completed === true);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={checkeAll}\n        onChange={handlerAllChecked}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n      >\n        <span>\n          Mark all as complete\n        </span>\n      </label>\n      <ul className=\"todo-list\">\n        {visibleTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todoId={todo.id}\n            title={todo.title}\n            completed={todo.completed}\n            handlerChecked={handlerChecked}\n            handlerDeleteTodo={handlerDeleteTodo}\n            handlerEditTodo={handlerEditTodo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport {\n  postTodo,\n  deleteTodo,\n  getTodo,\n  patchTodos,\n} from '../../api/todos/todosAPI';\n\nimport { TodoList } from '../TodoList';\nimport './TodoApp.scss';\n\ntype Props = {\n  todos: Todo[],\n  user: User | undefined,\n  removeUser: () => void,\n  handlerSingOut: () => void,\n};\n\nexport const TodoApp: React.FC<Props> = ({\n  todos,\n  user,\n  removeUser,\n  handlerSingOut,\n}) => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [newTitle, setNewTitle] = useState('');\n  const [updateTodos, setUpdateTodos] = useState(true);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (newTitle && user) {\n      await postTodo(newTitle, user.id, false);\n\n      setNewTitle('');\n      setUpdateTodos(!updateTodos);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (user) {\n        const todo = await getTodo(user.id);\n\n        setVisibleTodos(todo);\n      }\n    })();\n  }, [updateTodos]);\n\n  useEffect(() => {\n    setVisibleTodos(todos);\n  }, [todos]);\n\n  const handlerChecked = (todoId: number) => {\n    const findTodo = visibleTodos.find(todo => todo.id === todoId);\n\n    if (findTodo) {\n      patchTodos(todoId, !findTodo.completed, findTodo.title);\n      findTodo.completed = !findTodo.completed;\n    }\n\n    setVisibleTodos(pre => [...pre]);\n  };\n\n  const handlerDeleteTodo = (todoId: number) => {\n    const findTodo = visibleTodos.findIndex(todo => todo.id === todoId);\n\n    if (findTodo >= 0) {\n      deleteTodo(todoId);\n      visibleTodos.splice(findTodo, 1);\n      setVisibleTodos(pre => [...pre]);\n    }\n  };\n\n  const handlerAllChecked = () => {\n    const areCompleted = visibleTodos.every(todo => todo.completed);\n    const findTodo = visibleTodos.map(todo => ({\n      ...todo,\n      completed: areCompleted ? !todo.completed : true,\n    }));\n\n    visibleTodos\n      .forEach(todo => patchTodos(todo.id, (areCompleted ? !todo.completed : true), todo.title));\n\n    setVisibleTodos(findTodo);\n  };\n\n  const location = useLocation();\n\n  const parthName = location.pathname;\n\n  let filterTodos = visibleTodos;\n\n  useMemo(() => {\n    filterTodos = parthName !== '/'\n      ? visibleTodos.filter(todo => (\n        parthName === '/completed'\n          ? todo.completed\n          : !todo.completed\n      ))\n      : visibleTodos;\n  }, [parthName, newTitle, visibleTodos]);\n\n  const setActive = ({ isActive }: { isActive:boolean }) => (isActive ? 'selected' : '');\n\n  const deleteAllTodos = () => {\n    const onlyActive = visibleTodos.filter(todo => todo.completed === false);\n\n    visibleTodos\n      .forEach(todo => {\n        if (todo.completed) {\n          deleteTodo(todo.id);\n        }\n      });\n\n    setVisibleTodos(onlyActive);\n  };\n\n  const handlerEditTodo = (title: string, todoId: number) => {\n    const editTodo = visibleTodos.map(todo => {\n      if (todo.id === todoId) {\n        return {\n          title,\n          userId: todo.userId,\n          completed: todo.completed,\n          id: todo.id,\n        };\n      }\n\n      return todo;\n    });\n\n    visibleTodos.forEach(todo => {\n      if (todo.id === todoId) {\n        patchTodos(todoId, todo.completed, title);\n      }\n    });\n\n    setVisibleTodos(editTodo);\n  };\n\n  return (\n    <div className=\"TodoApp\">\n      <div className=\"TodoApp__header-btns\">\n        <button\n          type=\"button\"\n          onClick={removeUser}\n          className=\"TodoApp__bnt TodoApp__bnt--delete-user\"\n        >\n          Delete Account\n        </button>\n        <button\n          type=\"button\"\n          onClick={handlerSingOut}\n          className=\"TodoApp__bnt TodoApp__bnt--delete-user\"\n        >\n          Sign out\n        </button>\n      </div>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>\n            todos -\n            {' '}\n            {user\n              ? user.name\n              : <img className=\"TodoApp__loader-spiner\" src=\"../../icons/loader.svg\" alt=\"\" />}\n          </h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newTitle}\n              onChange={(event) => {\n                setNewTitle(event.target.value);\n              }}\n            />\n          </form>\n        </header>\n        <TodoList\n          visibleTodos={filterTodos}\n          handlerChecked={handlerChecked}\n          handlerDeleteTodo={handlerDeleteTodo}\n          handlerAllChecked={handlerAllChecked}\n          handlerEditTodo={handlerEditTodo}\n        />\n        {visibleTodos.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {visibleTodos.filter(todo => todo.completed === false).length}\n              {' '}\n              items left\n            </span>\n\n            <ul className=\"filters\">\n              <li>\n                <NavLink\n                  to=\"/\"\n                  className={setActive}\n                  end\n                >\n                  All\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"active\"\n                  className={setActive}\n                  end\n                >\n                  Active\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"completed\"\n                  className={setActive}\n                  end\n                >\n                  Completed\n                </NavLink>\n              </li>\n            </ul>\n\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={deleteAllTodos}\n            >\n              Clear completed\n            </button>\n          </footer>\n        ) }\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Auth } from './components/Auth';\nimport { TodoApp } from './components/TodoApp';\nimport { getTodos } from './api/todos/todosAPI';\nimport { getUsers, deleteUser } from './api/users/usersAPI';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [foundUser, setfoundUser] = useState<User | undefined>();\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [checkNewUser, setCheckNewUser] = useState(false);\n\n  const checkUser = localStorage.getItem('userId');\n\n  const dateFromServer = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer);\n    } catch {\n      throw new Error('todos');\n    }\n  };\n\n  const filterEmailUsers = users.map(user => user.email);\n\n  useEffect(() => {\n    dateFromServer();\n  }, []);\n\n  const waitingNewUser = () => {\n    setCheckNewUser(!checkNewUser);\n  };\n\n  const handlerLogin = (email: string, password: string) => {\n    (async () => {\n      await dateFromServer();\n\n      const findUser = users.find(user => user.email === email && user.username === password);\n\n      if (findUser) {\n        setfoundUser(findUser);\n      }\n    })();\n  };\n\n  useMemo(() => {\n    if (foundUser) {\n      localStorage.setItem('userId', foundUser ? foundUser.username : '');\n    }\n\n    const foundTodos = todos.filter(todo => todo.userId === foundUser?.id);\n\n    setVisibleTodos(foundTodos);\n  }, [foundUser]);\n\n  useEffect(() => {\n    if (checkUser) {\n      const findUser = users.find(user => user.username === checkUser);\n\n      setfoundUser(findUser);\n\n      if (findUser) {\n        const firstFilter = todos\n          .filter(todo => todo.userId === findUser?.id);\n\n        setVisibleTodos(firstFilter);\n      }\n    }\n  }, [users]);\n\n  const removeUser = () => {\n    if (foundUser) {\n      deleteUser(foundUser.id);\n\n      localStorage.removeItem('userId');\n\n      const updateUsers = users.filter(user => user.id !== foundUser.id);\n\n      setUsers(updateUsers);\n      setfoundUser(undefined);\n    }\n  };\n\n  const handlerSingOut = () => {\n    localStorage.removeItem('userId');\n    setfoundUser(undefined);\n  };\n\n  return (\n    <>\n      {checkUser\n        ? (\n          <TodoApp\n            todos={visibleTodos}\n            user={foundUser}\n            removeUser={removeUser}\n            handlerSingOut={handlerSingOut}\n          />\n        )\n        : (\n          <Auth\n            foundUser={foundUser}\n            handlerLogin={handlerLogin}\n            waitingNewUser={waitingNewUser}\n            filterEmailUsers={filterEmailUsers}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}