{"version":3,"sources":["api/users/usersAPI.ts","components/Notification/Notification.tsx","components/Registration/Registration.tsx","components/Auth/Auth.tsx","api/todos/todosAPI.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["BASE_URL","postUser","name","username","email","fetch","method","headers","body","JSON","stringify","Notification","message","className","Registration","backToAuth","handlerLogin","filterEmailUsers","useState","newEmail","setEmail","newPassword","setPassword","setName","openNotific","setOpenNotific","errorMessage","setErrorMessage","useMemo","htmlFor","type","id","value","placeholder","onChange","event","target","onClick","checkNewEmail","some","length","a","createUser","Auth","waitingNewUser","foundUser","password","opennerRegistr","setOpennerRegistr","openNotif","setOpenNotif","useEffect","min","patchTodos","todoId","completed","title","deleteTodo","TodoItem","handlerChecked","handlerDeleteTodo","handlerEditTodo","editor","setEditor","etidorTitle","setEtidorTitle","classnames","editing","onDoubleClick","checked","onKeyDown","key","TodoList","visibleTodos","handlerAllChecked","checkeAll","every","todo","map","TodoApp","todos","user","removeUser","handlerSingOut","visibleTodo","setTodo","newTitle","setNewTitle","updateTodos","setUpdateTodos","userId","then","res","json","parthName","useLocation","pathname","filterTodos","filter","setActive","isActive","src","alt","onSubmit","findTodo","find","pre","findIndex","splice","areCompleted","forEach","editTodo","to","end","onlyActive","App","users","setUsers","setfoundUser","setVisibleTodos","checkNewUser","setCheckNewUser","checkUser","localStorage","getItem","dateFromServer","todosFromServer","usersFromServer","Error","setItem","foundTodos","findUser","firstFilter","removeItem","updateUsers","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73ce2c2e.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api/users';\n\nexport const getUsers = () => {\n  return fetch(`${BASE_URL}`)\n    .then(res => res.json());\n};\n\nexport const deleteUser = (userId: number) => {\n  return fetch(`${BASE_URL}/${userId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const postUser = (\n  name: string,\n  username: string,\n  email: string,\n) => {\n  return fetch(`${BASE_URL}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      name,\n      username,\n      email,\n    }),\n  });\n};\n","import React from 'react';\nimport './Notification.scss';\n\ntype Props = {\n  message: string,\n};\n\nexport const Notification: React.FC<Props> = ({ message }) => {\n  return (\n    <div className=\"Notification\">\n      {message}\n    </div>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport { postUser } from '../../api/users/usersAPI';\nimport { Notification } from '../Notification';\n\nimport '../Auth/Auth.scss';\n\ntype Props = {\n  backToAuth: () => void,\n  handlerLogin: (email: string, password: string) => void,\n  filterEmailUsers: string[],\n};\n\nexport const Registration: React.FC<Props> = ({ backToAuth, handlerLogin, filterEmailUsers }) => {\n  const [newEmail, setEmail] = useState('');\n  const [newPassword, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [openNotific, setOpenNotific] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useMemo(() => {\n    setOpenNotific(false);\n  }, [newEmail, newPassword, name]);\n\n  const createUser = () => {\n    const checkNewEmail = filterEmailUsers.some(email => email === newEmail);\n\n    if (name.length > 2 && newEmail.length > 5 && newPassword.length > 7 && !checkNewEmail) {\n      (async () => {\n        await postUser(name, newPassword, newEmail);\n        handlerLogin(newEmail, newPassword);\n        backToAuth();\n      })();\n    } else {\n      setOpenNotific(true);\n    }\n\n    if (name.length < 3) {\n      setErrorMessage('Enter name min 3 letters');\n    } else if (newEmail.length < 5) {\n      setErrorMessage('Enter Email min 6 letters');\n    } else if (newPassword.length < 8) {\n      setErrorMessage('Enter Password min 6 letters');\n    } else if (checkNewEmail) {\n      setErrorMessage('This email is used');\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"Auth__form\">\n        <label\n          htmlFor=\"log-name\"\n          className=\"Auth__label\"\n        >\n          <span>Name</span>\n          <input\n            type=\"text\"\n            id=\"log-name\"\n            value={name}\n            className=\"Auth__input\"\n            placeholder=\"Minimum 3 letters\"\n            onChange={(event) => setName(event.target.value)}\n          />\n        </label>\n        <label\n          htmlFor=\"log-email\"\n          className=\"Auth__label\"\n        >\n          <span>Email</span>\n          <input\n            type=\"text\"\n            id=\"log-email\"\n            value={newEmail}\n            className=\"Auth__input\"\n            placeholder=\"Minimum 6 letters\"\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </label>\n        <label\n          htmlFor=\"log-password\"\n          className=\"Auth__label\"\n        >\n          <span>Password</span>\n          <input\n            type=\"password\"\n            id=\"log-password\"\n            value={newPassword}\n            className=\"Auth__input\"\n            placeholder=\"Minimum 8 letters\"\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </label>\n        <button\n          type=\"button\"\n          className=\"Auth__btn\"\n          onClick={() => createUser()}\n        >\n          CREATE\n        </button>\n        <button\n          type=\"button\"\n          className=\"Auth__btn\"\n          onClick={() => backToAuth()}\n        >\n          SING IN\n        </button>\n        {openNotific && <Notification message={errorMessage} />}\n      </form>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Registration } from '../Registration';\nimport { Notification } from '../Notification';\nimport './Auth.scss';\n\ntype Props = {\n  handlerLogin: (email: string, password: string) => void,\n  waitingNewUser: () => void,\n  foundUser: User | undefined,\n  filterEmailUsers: string[],\n};\n\nexport const Auth: React.FC<Props> = ({\n  handlerLogin,\n  waitingNewUser,\n  foundUser,\n  filterEmailUsers,\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [opennerRegistr, setOpennerRegistr] = useState(false);\n  const [openNotif, setOpenNotif] = useState(false);\n\n  useMemo(() => {\n    setOpenNotif(false);\n  }, [email, password]);\n\n  const backToAuth = () => {\n    setOpennerRegistr(!opennerRegistr);\n    setPassword('');\n    setEmail('');\n    setOpenNotif(false);\n    waitingNewUser();\n  };\n\n  const controlLogin = () => {\n    if (email.length > 3 && password.length > 4) {\n      handlerLogin(email, password);\n      setOpenNotif(true);\n    } else {\n      setOpenNotif(true);\n    }\n  };\n\n  useEffect(() => {\n    setPassword('');\n    setEmail('');\n  }, [foundUser]);\n\n  return (\n    <div className=\"Auth\">\n      {opennerRegistr\n        ? (\n          <Registration\n            backToAuth={backToAuth}\n            handlerLogin={handlerLogin}\n            filterEmailUsers={filterEmailUsers}\n          />\n        )\n        : (\n          <form className=\"Auth__form\">\n            <label\n              htmlFor=\"log-email\"\n              className=\"Auth__label\"\n            >\n              <span>Email</span>\n              <input\n                type=\"text\"\n                id=\"log-email\"\n                value={email}\n                className=\"Auth__input\"\n                min={3}\n                placeholder=\"Minimum 3 letters\"\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </label>\n            <label\n              htmlFor=\"log-password\"\n              className=\"Auth__label\"\n            >\n              <span>Password</span>\n              <input\n                type=\"password\"\n                id=\"log-password\"\n                className=\"Auth__input\"\n                value={password}\n                placeholder=\"Minimum 8 letters\"\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </label>\n            <button\n              type=\"button\"\n              className=\"Auth__btn\"\n              onClick={() => controlLogin()}\n            >\n              LOGIN\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"Auth__btn\"\n              onClick={() => setOpennerRegistr(!opennerRegistr)}\n            >\n              REGISTRATION\n            </button>\n            {openNotif && (!foundUser && <Notification message=\"Incorrect login or password\" />) }\n          </form>\n        )}\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/todos';\n\nexport const getTodos = () => {\n  return fetch(`${BASE_URL}`)\n    .then(res => res.json());\n};\n\nexport const getTodo = (userId: number) => {\n  return fetch(`${BASE_URL}?userId=${userId}`)\n    .then(res => res.json());\n};\n\nexport const postTodo = (title: string, userId: number, completed: boolean) => {\n  return fetch(`${BASE_URL}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      title,\n      userId,\n      completed,\n    }),\n  });\n};\n\nexport const patchTodos = (todoId: number, completed: boolean, title: string) => {\n  return fetch(`${BASE_URL}/${todoId}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({ completed, title }),\n  });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return fetch(`${BASE_URL}/${todoId}`, {\n    method: 'DELETE',\n  });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  title: string,\n  completed: boolean,\n  todoId: number,\n  handlerChecked: (todoId: number) => void,\n  handlerDeleteTodo: (todoId: number) => void,\n  handlerEditTodo: (title: string, todoId: number) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  title,\n  completed,\n  todoId,\n  handlerChecked,\n  handlerDeleteTodo,\n  handlerEditTodo,\n}) => {\n  const [editor, setEditor] = useState(false);\n  const [etidorTitle, setEtidorTitle] = useState('');\n\n  useEffect(() => {\n    setEtidorTitle(title);\n  }, []);\n\n  const controlKeyDown = (event: { key: string; }) => {\n    if (event.key === 'Enter') {\n      handlerEditTodo(etidorTitle, todoId);\n      setEditor(false);\n    } else if (event.key === 'Escape') {\n      setEditor(false);\n    }\n  };\n\n  return (\n    <li\n      className={classnames({\n        completed,\n        editing: editor,\n      })}\n      onDoubleClick={() => setEditor(!editor)}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => handlerChecked(todoId)}\n        />\n        <label>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handlerDeleteTodo(todoId)}\n        >\n          {' '}\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={etidorTitle}\n        onChange={(event) => setEtidorTitle(event.target.value)}\n        onKeyDown={controlKeyDown}\n      />\n    </li>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  visibleTodos: Todo[],\n  handlerChecked: (todoId: number) => void,\n  handlerDeleteTodo: (todoId: number) => void,\n  handlerAllChecked: () => void,\n  handlerEditTodo: (title: string, todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  handlerChecked,\n  handlerDeleteTodo,\n  handlerAllChecked,\n  handlerEditTodo,\n}) => {\n  const checkeAll = visibleTodos.every(todo => todo.completed === true);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={checkeAll}\n        onClick={handlerAllChecked}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n      >\n        <span>\n          Mark all as complete\n        </span>\n      </label>\n      <ul className=\"todo-list\">\n        {visibleTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todoId={todo.id}\n            title={todo.title}\n            completed={todo.completed}\n            handlerChecked={handlerChecked}\n            handlerDeleteTodo={handlerDeleteTodo}\n            handlerEditTodo={handlerEditTodo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport {\n  postTodo,\n  deleteTodo,\n  getTodo,\n  patchTodos,\n} from '../../api/todos/todosAPI';\n\nimport { TodoList } from '../TodoList';\nimport './TodoApp.scss';\n\ntype Props = {\n  todos: Todo[],\n  user: User | undefined,\n  removeUser: () => void,\n  handlerSingOut: () => void,\n};\n\nexport const TodoApp: React.FC<Props> = ({\n  todos,\n  user,\n  removeUser,\n  handlerSingOut,\n}) => {\n  const [visibleTodo, setTodo] = useState<Todo[]>(todos);\n  const [newTitle, setNewTitle] = useState('');\n  const [updateTodos, setUpdateTodos] = useState(true);\n\n  const handleSubmit = () => {\n    if (newTitle && user) {\n      (async () => {\n        await postTodo(newTitle, user.id, false);\n        setNewTitle('');\n        setUpdateTodos(!updateTodos);\n      })();\n    }\n  };\n\n  useMemo(() => {\n    (async () => {\n      if (user) {\n        const todo = await getTodo(user.id);\n\n        setTodo(todo);\n      }\n    })();\n  }, [updateTodos]);\n\n  useEffect(() => {\n    setTodo(todos);\n  }, [todos]);\n\n  const handlerChecked = (todoId: number) => {\n    const findTodo = visibleTodo.find(todo => todo.id === todoId);\n\n    if (findTodo) {\n      patchTodos(todoId, !findTodo.completed, findTodo.title);\n      findTodo.completed = !findTodo.completed;\n    }\n\n    setTodo(pre => [...pre]);\n  };\n\n  const handlerDeleteTodo = (todoId: number) => {\n    const findTodo = visibleTodo.findIndex(todo => todo.id === todoId);\n\n    if (findTodo >= 0) {\n      deleteTodo(todoId);\n      visibleTodo.splice(findTodo, 1);\n      setTodo(pre => [...pre]);\n    }\n  };\n\n  const handlerAllChecked = () => {\n    const areCompleted = visibleTodo.every(todo => todo.completed);\n    const findTodo = visibleTodo.map(todo => ({\n      ...todo,\n      completed: areCompleted ? !todo.completed : true,\n    }));\n\n    visibleTodo\n      .forEach(todo => patchTodos(todo.id, (areCompleted ? !todo.completed : true), todo.title));\n\n    setTodo(findTodo);\n  };\n\n  const location = useLocation();\n\n  const parthName = location.pathname;\n\n  let filterTodos = visibleTodo;\n\n  useMemo(() => {\n    filterTodos = parthName !== '/'\n      ? visibleTodo.filter(todo => (\n        parthName === '/completed'\n          ? todo.completed\n          : !todo.completed\n      ))\n      : visibleTodo;\n  }, [parthName, newTitle, visibleTodo]);\n\n  const setActive = ({ isActive }: { isActive:boolean }) => (isActive ? 'selected' : '');\n\n  const deleteAllTodos = () => {\n    const onlyActive = visibleTodo.filter(todo => todo.completed === false);\n\n    visibleTodo\n      .forEach(todo => {\n        if (todo.completed) {\n          deleteTodo(todo.id);\n        }\n      });\n\n    setTodo(onlyActive);\n  };\n\n  const handlerEditTodo = (title: string, todoId: number) => {\n    const editTodo = visibleTodo.map(todo => {\n      if (todo.id === todoId) {\n        return {\n          title,\n          userId: todo.userId,\n          completed: todo.completed,\n          id: todo.id,\n        };\n      }\n\n      return todo;\n    });\n\n    visibleTodo.forEach(todo => {\n      if (todo.id === todoId) {\n        patchTodos(todoId, todo.completed, title);\n      }\n    });\n\n    setTodo(editTodo);\n  };\n\n  return (\n    <div className=\"TodoApp\">\n      <div className=\"TodoApp__header-btns\">\n        <button\n          type=\"button\"\n          onClick={() => removeUser()}\n          className=\"TodoApp__bnt TodoApp__bnt--delete-user\"\n        >\n          Delete Account\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => handlerSingOut()}\n          className=\"TodoApp__bnt TodoApp__bnt--delete-user\"\n        >\n          Sign out\n        </button>\n      </div>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>\n            todos -\n            {' '}\n            {user\n              ? user.name\n              : <img className=\"TodoApp__loader-spiner\" src=\"../../icons/loader.svg\" alt=\"\" />}\n          </h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newTitle}\n              onChange={(event) => {\n                setNewTitle(event.target.value);\n              }}\n            />\n          </form>\n        </header>\n        <TodoList\n          visibleTodos={filterTodos}\n          handlerChecked={handlerChecked}\n          handlerDeleteTodo={handlerDeleteTodo}\n          handlerAllChecked={handlerAllChecked}\n          handlerEditTodo={handlerEditTodo}\n        />\n        {visibleTodo.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {visibleTodo.filter(todo => todo.completed === false).length}\n              {' '}\n              items left\n            </span>\n\n            <ul className=\"filters\">\n              <li>\n                <NavLink\n                  to=\"/\"\n                  className={setActive}\n                  end\n                >\n                  All\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"active\"\n                  className={setActive}\n                  end\n                >\n                  Active\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"completed\"\n                  className={setActive}\n                  end\n                >\n                  Completed\n                </NavLink>\n              </li>\n            </ul>\n\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={deleteAllTodos}\n            >\n              Clear completed\n            </button>\n          </footer>\n        ) }\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Auth } from './components/Auth';\nimport { TodoApp } from './components/TodoApp';\nimport { getTodos } from './api/todos/todosAPI';\nimport { getUsers, deleteUser } from './api/users/usersAPI';\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [foundUser, setfoundUser] = useState<User | undefined>();\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [checkNewUser, setCheckNewUser] = useState(false);\n\n  const checkUser = localStorage.getItem('userId');\n\n  const dateFromServer = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodo(todosFromServer);\n      const usersFromServer = await getUsers();\n\n      setUsers(usersFromServer);\n    } catch {\n      throw new Error('todos');\n    }\n  };\n\n  const filterEmailUsers = users.map(user => user.email);\n\n  useEffect(() => {\n    dateFromServer();\n  }, []);\n\n  const waitingNewUser = () => {\n    setCheckNewUser(!checkNewUser);\n  };\n\n  const handlerLogin = (email: string, password: string) => {\n    (async () => {\n      await dateFromServer();\n\n      const findUser = users.find(user => user.email === email && user.username === password);\n\n      if (findUser) {\n        setfoundUser(findUser);\n      }\n    })();\n  };\n\n  useMemo(() => {\n    if (foundUser) {\n      localStorage.setItem('userId', foundUser ? foundUser.username : '');\n    }\n\n    const foundTodos = todos.filter(todo => todo.userId === foundUser?.id);\n\n    setVisibleTodos(foundTodos);\n  }, [foundUser]);\n\n  useEffect(() => {\n    if (checkUser) {\n      const findUser = users.find(user => user.username === checkUser);\n\n      setfoundUser(findUser);\n\n      if (findUser) {\n        const firstFilter = todos\n          .filter(todo => todo.userId === findUser?.id);\n\n        setVisibleTodos(firstFilter);\n      }\n    }\n  }, [users]);\n\n  const removeUser = () => {\n    if (foundUser) {\n      deleteUser(foundUser.id);\n\n      localStorage.removeItem('userId');\n\n      const updateUsers = users.filter(user => user.id !== foundUser.id);\n\n      setUsers(updateUsers);\n      setfoundUser(undefined);\n    }\n  };\n\n  const handlerSingOut = () => {\n    localStorage.removeItem('userId');\n    setfoundUser(undefined);\n  };\n\n  return (\n    <>\n      {checkUser && (\n        <TodoApp\n          todos={visibleTodos}\n          user={foundUser}\n          removeUser={removeUser}\n          handlerSingOut={handlerSingOut}\n        />\n      )}\n      {!checkUser && (\n        <Auth\n          foundUser={foundUser}\n          handlerLogin={handlerLogin}\n          waitingNewUser={waitingNewUser}\n          filterEmailUsers={filterEmailUsers}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}